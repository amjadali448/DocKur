{"ast":null,"code":"import { getNetworkDataSuccess, getNetworkDataFail, getImportImgSuccess, getImportImgFail, getCreateNetworSuccess, getCreateNetworFail, getContainerListSuccess, getContainerListFail, getListofImagesSuccess, getListofImagesFail, getStartSuccess, getStartFail, getStopSuccess, getStopFail, getDeleteSuccess, getDeleteFail, getVolumelistSuccess, getVolumelistFail } from \"../constants\";\nconst initialState = {\n  data: null\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    // Each action function have Sucess andd Fail i-e these 2 are Networklist \n    // these are define in containers and then import in action and reducer\n    case getNetworkDataSuccess:\n      // (1) Sucess or get error msg to get payload \n      return {\n        ...state,\n        Networklist: action.payload // Update 'data' property State and them inport in Home Line (972) and in props\n      };\n\n    case getNetworkDataFail:\n      // (2) fail or get error msg\n      return {\n        ...state,\n        Networklist: action.payload.message // Update 'data' property\n      };\n    //-----\n    case getCreateNetworSuccess:\n      return {\n        ...state,\n        createNetwork: action.payload // Update 'data' property\n      };\n\n    case getCreateNetworFail:\n      return {\n        ...state,\n        createNetwork: action.payload.message // Update 'data' property\n      };\n\n    case getImportImgSuccess:\n      return {\n        ...state,\n        importImg: action.payload // Update 'data' property\n      };\n\n    case getImportImgFail:\n      return {\n        ...state,\n        importImg: action.payload.message // Update 'data' property\n      };\n\n    case getContainerListSuccess:\n      return {\n        ...state,\n        containerLists: action.payload // Update 'data' property\n      };\n\n    case getContainerListFail:\n      return {\n        ...state,\n        containerLists: action.payload.message // Update 'data' property\n      };\n\n    case getListofImagesSuccess:\n      return {\n        ...state,\n        listContainer: action.payload // Update 'data' property\n      };\n\n    case getListofImagesFail:\n      return {\n        ...state,\n        listContainer: action.payload.message // Update 'data' property\n      };\n\n    case getVolumelistSuccess:\n      return {\n        ...state,\n        volumelist: action.payload // Update 'data' property\n      };\n\n    case getVolumelistFail:\n      return {\n        ...state,\n        volumelist: action.payload.message // Update 'data' property\n      };\n\n    case getStartSuccess:\n      return {\n        ...state,\n        Start: action.payload // Update 'data' property\n      };\n\n    case getStartFail:\n      return {\n        ...state,\n        Start: action.payload.message // Update 'data' property\n      };\n\n    case getStopSuccess:\n      return {\n        ...state,\n        Stop: action.payload // Update 'data' property\n      };\n\n    case getStopFail:\n      return {\n        ...state,\n        Stop: action.payload.message // Update 'data' property\n      };\n\n    case getDeleteSuccess:\n      return {\n        ...state,\n        Delete: action.payload // Update 'data' property\n      };\n\n    case getDeleteFail:\n      return {\n        ...state,\n        Delete: action.payload.message // Update 'data' property\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["getNetworkDataSuccess","getNetworkDataFail","getImportImgSuccess","getImportImgFail","getCreateNetworSuccess","getCreateNetworFail","getContainerListSuccess","getContainerListFail","getListofImagesSuccess","getListofImagesFail","getStartSuccess","getStartFail","getStopSuccess","getStopFail","getDeleteSuccess","getDeleteFail","getVolumelistSuccess","getVolumelistFail","initialState","data","state","arguments","length","undefined","action","type","Networklist","payload","message","createNetwork","importImg","containerLists","listContainer","volumelist","Start","Stop","Delete"],"sources":["/home/amjad/Pictures/FYP-FINAL-VERSION/Frontend/src/Redux/Auth/reducer.js"],"sourcesContent":["import {\r\n\r\n    getNetworkDataSuccess,\r\n    getNetworkDataFail,\r\n    getImportImgSuccess,\r\n    getImportImgFail,\r\n    getCreateNetworSuccess,\r\n    getCreateNetworFail,\r\n    getContainerListSuccess,\r\n    getContainerListFail,\r\n    getListofImagesSuccess,\r\n    getListofImagesFail, getStartSuccess,\r\n    getStartFail,\r\n    getStopSuccess,\r\n    getStopFail,\r\n    getDeleteSuccess,\r\n    getDeleteFail,\r\n    getVolumelistSuccess,\r\n    getVolumelistFail\r\n\r\n} from \"../constants\";\r\n\r\nconst initialState = {\r\n    data: null,\r\n\r\n\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        // Each action function have Sucess andd Fail i-e these 2 are Networklist \r\n        // these are define in containers and then import in action and reducer\r\n        case getNetworkDataSuccess:// (1) Sucess or get error msg to get payload \r\n            return {\r\n                ...state,\r\n                Networklist: action.payload, // Update 'data' property State and them inport in Home Line (972) and in props\r\n            };\r\n        case getNetworkDataFail:// (2) fail or get error msg\r\n            return {\r\n                ...state,\r\n                Networklist: action.payload.message, // Update 'data' property\r\n            };\r\n        //-----\r\n        case getCreateNetworSuccess:\r\n            return {\r\n                ...state,\r\n                createNetwork: action.payload, // Update 'data' property\r\n            };\r\n        case getCreateNetworFail:\r\n            return {\r\n                ...state,\r\n                createNetwork: action.payload.message, // Update 'data' property\r\n            };\r\n\r\n        case getImportImgSuccess:\r\n            return {\r\n                ...state,\r\n                importImg: action.payload, // Update 'data' property\r\n            };\r\n        case getImportImgFail:\r\n            return {\r\n                ...state,\r\n                importImg: action.payload.message, // Update 'data' property\r\n            };\r\n\r\n        case getContainerListSuccess:\r\n            return {\r\n                ...state,\r\n                containerLists: action.payload, // Update 'data' property\r\n            };\r\n        case getContainerListFail:\r\n            return {\r\n                ...state,\r\n                containerLists: action.payload.message, // Update 'data' property\r\n            };\r\n\r\n        case getListofImagesSuccess:\r\n            return {\r\n                ...state,\r\n                listContainer: action.payload, // Update 'data' property\r\n            };\r\n        case getListofImagesFail:\r\n            return {\r\n                ...state,\r\n                listContainer: action.payload.message, // Update 'data' property\r\n            };\r\n\r\n\r\n        case getVolumelistSuccess:\r\n            return {\r\n                ...state,\r\n                volumelist: action.payload, // Update 'data' property\r\n            };\r\n        case getVolumelistFail:\r\n            return {\r\n                ...state,\r\n                volumelist: action.payload.message, // Update 'data' property\r\n            };\r\n        case getStartSuccess:\r\n            return {\r\n                ...state,\r\n                Start: action.payload, // Update 'data' property\r\n            };\r\n        case\r\n            getStartFail:\r\n            return {\r\n                ...state,\r\n                Start: action.payload.message, // Update 'data' property\r\n            };\r\n\r\n\r\n        case\r\n            getStopSuccess:\r\n            return {\r\n                ...state,\r\n                Stop: action.payload, // Update 'data' property\r\n            };\r\n        case\r\n            getStopFail:\r\n            return {\r\n                ...state,\r\n                Stop: action.payload.message, // Update 'data' property\r\n            };\r\n\r\n\r\n        case\r\n            getDeleteSuccess:\r\n            return {\r\n                ...state,\r\n                Delete: action.payload, // Update 'data' property\r\n            };\r\n        case\r\n            getDeleteFail:\r\n            return {\r\n                ...state,\r\n                Delete: action.payload.message, // Update 'data' property\r\n            };\r\n\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}